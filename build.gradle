buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "org.grails.plugins:views-gradle:1.1.6"
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.3"
}

//run: gradle project to see the description of project
description = """
An Grails3 Restful API application with PostgreSQL as the back-end database.

Project name: ${project.name}

It demonstrates the ease of builing Restful application, securing it and automating the API document generation
with 'Rest Assured' and 'Spring Rest Docs' frameworks.
"""
version "0.1"
group "giri.api"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.plugins.views-json"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
    springSecurityRestVersion = project.springSecurityRestVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    jcenter() //Bintray JCenter repo for grails postgres-extensions plugin
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.3.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.3.Final"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api"
    //grails security-core plugin
    compile "org.grails.plugins:spring-security-core:3.1.0"
    //grails REST API Security plugin
    compile "org.grails.plugins:spring-security-rest:${springSecurityRestVersion}"
    compile "org.grails.plugins:spring-security-rest-gorm:${springSecurityRestVersion}"

    //grails postgresql extensions plugin for JSON type
    compile 'org.grails.plugins:postgresql-extensions:4.6.6'

    runtime "org.postgresql:postgresql:9.4.1208.jre7" //Java JDBC 4.1 (JRE 7+) driver for PostgreSQL
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}
//3.1.6 not there in 3.2.11
//task wrapper(type: Wrapper) {
//    gradleVersion = gradleWrapperVersion
//}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

apply from: 'gradle/restdocs.gradle'